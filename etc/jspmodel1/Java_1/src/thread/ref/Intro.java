package thread.ref;
/*
멀티 스레드
운영체제 실행중인 프로그램을 프로세스로 관리, 멀티태스킹
두가지 이상의 작업을 동시에 처리하는 것을 의미한다
이때 운영체제는 멀티 프로세스를 생성해서 처리한다
하나의 프로세스에서 멀티태스킹을 할수 있도록 만들어진 프로그램이 있다
하나의 프로세스가 두 가지 이상의 작업을 처리할수 있는 이유는
multi thread가 있기 때문이다
thread는 코드의 실행 흐름을 말하는데 프로세스 내에서 스레드가 두개라면 
두개의 코드 실행 흐름이 생긴다는 의미이다.
멀티스레드들은 서로 독립적이므로 하나의 프로세스에서 오류가 발생해도
다른 프로세스에게 영향을 미치지 않는다

멀티 스레드는 데이터를 분할해서 병렬로 처리하는곳에서 사용하기도 하고
안드로이드앱에서 네트워크 통신을 하기 위해서도 사용한다
다수의 클라이언트 요청을 처리하는 서버를 개발할때도 사용한다

자바21부터는 가상스레드 기능이 추가
플렛폼스레드와 복수개의 가상스레드가 운영체제의 스레드 1개와
매핑되면서 실행된다 

1) 메인스레드
2) 작업스레드의 생성과 실행
3) 스레드 이름
4) 스레드 상태
5) 스레드 동기화
6) 스레드 안전종료
7) 데몬스레드
8) 스레드 풀
*/
public class Intro {

	public static void main(String[] args) {
/*모든 자바 프로그램은 메인 스레드가 main()을 실행하면서 시작된다
메인 스레드는 main() 메소드의 첫 코드부터 순차적으로 실행하고
main() 메소드의 마지막 코드를 실행하거나 return문을 만나면 실행을 종료합니다
*/
String data = null;
if(data == "some") {
	System.out.println("메인 스레드는 필요에 따라 추가 작업을 만들어서 실행시킬수 있습니다");
}else if(data == null) {
	System.out.println("null");
}else {
	System.out.println("end");
}
int i = 0;
while(i < 2) {
	System.out.println(i+"ff");
	i++;
}
System.out.println("...");

	
	}

}
